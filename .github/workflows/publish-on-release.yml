name: PublishOnPush

permissions:
  contents: write
  pages: write

on:
  release:
    branches:
      - main
jobs:
  release:
    name: publish
    runs-on: ubuntu-latest
    steps:
      - name: Enable actions unsecure commands
        run: |
          echo "ACTIONS_ALLOW_UNSECURE_COMMANDS=true" >> $GITHUB_ENV
      - name: Checkout The Code
        uses: actions/checkout@v2.1.1

      - name: Cache node_modules directory
        id: cache-modules
        uses: actions/cache@v1
        with:
          path: node_modules
          key: 12.x-${{ runner.OS }}-build-${{ hashFiles('package.json') }}

      - name: Install Package Dependencies
        if: steps.cache-modules.outputs.cache-hit != 'true'
        run: yarn

      - name: Setup NodeJS
        uses: actions/setup-node@v1.4.2
        with:
          node-version: 17
          registry-url: https://registry.npmjs.org

      - name: Git Identity
        run: |
          git config --global user.name 'github-actions[bot]'
          git config --global user.email 'github-actions[bot]@users.noreply.github.com'
          git remote set-url origin https://x-access-token:${GITHUB_TOKEN}@github.com/$GITHUB_REPOSITORY
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      

      - name: store packages paths
        run: |
          rootDir=$(pwd)
          productionPackageDir=$(pwd)/packages/production
          developmentPackageDir=$(pwd)/packages/development


      # Publish production package
      # - name: open production package directory
      #   run: cd packages/production/dist
      - name: update the module version
        run: |
          cd packages/production
          npm version major
        env:
          NODE_AUTH_TOKEN: ${{secrets.NPM_AUTH_TOKEN}}
      - name: Build the Package
        run: |
          cd packages/production
          yarn build
      - name: publish the production module to the node package manager #2
        run: |
          cd packages/production/dist
          npm publish --access public
        env:
          NODE_AUTH_TOKEN: ${{secrets.NPM_AUTH_TOKEN}}
      - name: push production package version update to the repository
        run: |
          git add .
          git commit -m "feat: update production package version"
          git push origin main    
      # End Publish production package

      # Publish development package
      # - name: open development package directory
      #   run: cd packages/development/dist
      - name: update the module version
        run: |
          cd packages/development
          npm version major
        env:
          NODE_AUTH_TOKEN: ${{secrets.NPM_AUTH_TOKEN}}
      - name: Build the Package
        run: |
          cd packages/development
          yarn build
      - name: publish the development module to the node package manager #2
        run: |
          cd packages/development/dist
          npm publish --access public
        env:
          NODE_AUTH_TOKEN: ${{secrets.NPM_AUTH_TOKEN}}
      - name: push development package version update to the repository
        run: |
          git add .
          git commit -m "feat: update development package version"
          git push origin main 
      # End Publish development package
